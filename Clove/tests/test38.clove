/**
 * Test more advanced Reflection API
 */

log("Advanced Reflection API");
log();

const urlText = "https://my-json-server.typicode.com/typicode/demo/posts";

const result = reflect("java.lang.StringBuilder");
const url = reflect("java.net.URL", [urlText]);
const connection = ("java.net.HttpURLConnection") url.openConnection();
connection.setRequestMethod("GET");

const inputStream = ("java.io.InputStream") connection.getInputStream();
//log(inputStream.available());
const inputStreamReader = reflect("java.io.InputStreamReader", [inputStream]);

const reader = ("java.io.Reader") inputStreamReader;
log(reader->getClass()); // This should return 'Reader', not 'InputStreamReader'.
//const bufferedReader = ("java.io.BufferedReader") reader;

// All in one line -- add Reflection casting to the expression grammar.
//const reader = reflect("java.io.BufferedReader", [("java.io.Reader") reflect("java.io.InputStreamReader", [("java.io.InputStream") connection.getInputStream()] ) ]);

//let line = bufferedReader.readLine();

//result.append(line);
//while (!(line == "")) {
//    result.append(line);
//    line = reader.readLine();
//}

//reader.close();

//print(result.toString());
