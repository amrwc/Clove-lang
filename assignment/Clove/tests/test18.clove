// Test anonymous objects
write("Anonymous object initialisation and accessing:")
let obj = {
	num: 999,
	str: "Hi"
}
write("obj.num: ", obj.num)
write()
write("obj.str: ", obj.str)
write()


write("----------------------------")


write("Nested objects:")
write()
let obj2 = {
	nested: {
		num2: {
			nines: 9999999
		},
		str2: "Hello"
	},
	test: "test"
}
write("obj2.nested.str2: ", obj2.nested.str2)
write()
write("obj2.nested.num2.nines: ", obj2.nested.num2.nines)
write()


write("----------------------------")


write("Key-value pairs reassignment:")
write()
write("obj.num = 33")
obj.num = 33
write("obj.num: ", obj.num)
write()
write("obj2.nested.str2 = Very nice!")
obj2.nested.str2 = "Very nice!"
write("obj2.nested.str2: ", obj2.nested.str2)
write()


write("----------------------------")


write("Functions in objects:")
write()
let obj3 = {
	fn1: function(a) {
		return a + 1
	},
	nested: {
		fn2: (x) => {
			return x * 2
		}
	}
}
write("obj3.fn1(5): ")
write(obj3.fn1(5))
write()

write("obj3.nested.fn2(10)")
write(obj3.nested.fn2(10))
