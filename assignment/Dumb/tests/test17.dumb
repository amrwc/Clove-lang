// Test anonymous functions
write "Anonymous functions:"
write ""


write "Dave's first challenge:"
myop = fn(x, y) {
	return x + y
}
write myop(2, 3)


write ""


write "Nested anonymous function:"
anon = fn(x, y) {
	anonNested = fn(a, b) {
		return a + b
	}
	
	return x + y + anonNested(3, 4)
}
write anon(1, 2)


write ""


write "Dave's second challenge:"
myop2 = fn(x, y) {
	return x(22) + y
}
write myop2(
	fn(p) {
		return p * 4
	},
	3
)


write ""


write "Beyond the challenges:"
singleNested = fn(a, b, c) {
	return a() + b() + c()
}
write singleNested(
	fn() { return 222 },
	fn() { return 777 },
	fn() { return 2+2 }
)

withArguments = fn(a, b) {
	return a(1) + b
}
write withArguments(
	fn(x) { return x + 2 },
	9
)

//doubleNested = fn(a, b, c) {
//	return a(fn() { return 44 + 55}) + b + c
//}
//write doubleNested(
//	fn(xyz) { return xyz() + 11 },
//	22,
//	33
//)
