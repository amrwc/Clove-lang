// Test anonymous objects

write "Anonymous object initialisation and accessing:"
write ""

obj = {
	num = 999,
	str = "Hi"
}

write "obj.num: "
write obj.num
write ""

write "obj.str: "
write obj.str
write ""

write "----------------------------"


write "Nested objects:"
write ""

obj2 = {
	nested = {
		num2 = {
			nines = 9999999
		},
		str2 = "Hello"
	},
	test = "test"
}

write "obj2.nested.str2: "
write obj2.nested.str2
write ""

write "obj2.nested.num2.nines: "
write obj2.nested.num2.nines
write ""

write "----------------------------"


write "Key-value pairs reassignment:"
write ""

write "obj.num = 33"
obj.num = 33
write "obj.num:"
write obj.num
write ""

write "obj2.nested.str2 = Very nice!"
obj2.nested.str2 = "Very nice!"
write "obj2.nested.str2:"
write obj2.nested.str2

write "----------------------------"


write "Functions in objects:"
write ""

obj3 = {
	fn1 = function(a) {
		return a + 1
	}
}

write "obj3.fn1(5): "
write "REQUIRES SPECIAL ATTENTION"
//write obj3.fn1(5) // NOTE: This only works with 'dereference() arglist()' in fn_invoke() inside Dumb.jjt.
