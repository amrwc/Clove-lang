// Test anonymous objects
write("Anonymous object initialisation and accessing:")
obj = {
	num = 999,
	str = "Hi"
}
write("obj.num: ", obj.num, "")
write("obj.str: ", obj.str, "")


write("----------------------------")


write("Nested objects:", "")
obj2 = {
	nested = {
		num2 = {
			nines = 9999999
		},
		str2 = "Hello"
	},
	test = "test"
}
write("obj2.nested.str2: ", obj2.nested.str2, "")
write("obj2.nested.num2.nines: ", obj2.nested.num2.nines, "")


write("----------------------------")


write("Key-value pairs reassignment:", "")
write("obj.num = 33")
obj.num = 33
write("obj.num: ", obj.num, "")
write("obj2.nested.str2 = Very nice!")
obj2.nested.str2 = "Very nice!"
write("obj2.nested.str2:", obj2.nested.str2)


write("----------------------------")


write("Functions in objects:", "")
obj3 = {
	fn1 = function(a) {
		return a + 1
	}
}
write("obj3.fn1(5): ", "REQUIRES SPECIAL ATTENTION")
//write(obj3.fn1(5)) // NOTE: This only works with 'dereference() arglist()' in fn_invoke() inside Dumb.jjt.
